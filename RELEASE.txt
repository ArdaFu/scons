If you are reading this in the git repository, the contents
refer to *unreleased* changes since the last SCons release.
Past official release announcements appear at:

    https://scons.org/tag/releases.html

==================================================================

A new SCons release, 4.5.3, is now available on the SCons download page:

    https://scons.org/pages/download.html


Here is a summary of the changes since 4.5.2:

NEW FUNCTIONALITY
-----------------

- D compilers : added support for generation of .di interface files.
  New variables DI_FILE_DIR, DI_FILE_DIR_PREFIX, DI_FILE_DIR_SUFFIX,
  DI_FILE_SUFFIX.

DEPRECATED FUNCTIONALITY
------------------------

- List anything that's been deprecated since the last release

CHANGED/ENHANCED EXISTING FUNCTIONALITY
---------------------------------------

- When debugging (--debug=pdb), the filenames SConstruct and SConscript
  are now recognized when manipulating breakpoints. Previously,
  only a full pathname to an sconscript file worked, as pdb requires
  a .py extension to open a file that is not an absolute path.
- Three unused non-public methods of the Environment Base class
  were dropped: get_src_sig_type, get_tgt_sig_type, _changed_source.
  These were unused remnants of the previously removed SourceSignatures
  and TargetSignatures features (dropped in 3.1.2).
- The --debug flag now has a 'json' option which will write information
  generated by --debug={count, memory, time, action-timestamps} and about
  the build.
- Obsoleted YACCVCGFILESUFFIX, it's being replaced by YACC_GRAPH_FILE_SUFFIX.
  If YACC_GRAPH_FILE_SUFFIX is not set, it will respect YACCVCGFILESUFFIX.
- The yacc tool now understands the bison behavior of --header, --defines
  and --graph being called without an option-argument as being synonyms
  for -d (first two) and -g. -H also recognized as a synonym for -d.
  Default value for $YACC_GRAPH_FILE_SUFFIX changed to '.gv' to match
  current bison default (since bison 3.8). Set this variable to '.dot'
  if using byacc. Fixes #4326 and #4327.

FIXES
-----

- Fixed: when using the mingw tool, if an msys2 Python is used (os.sep
  is '/' rather than the Windows default '\'), certain Configure checks
  could fail due to the construction of the path to run the compiled check.
- C scanner's dictifyCPPDEFINES routine did not understand the possible
  combinations of CPPDEFINES - not aware of a "name=value" string either
  embedded in a sequence, or by itself.  The conditional C scanner thus
  did not always properly apply the defines. The regular C scanner does
  not use these, so was not affected.  [fixes #4193]

IMPROVEMENTS
------------

- Now tries to find mingw if it comes from Chocolatey install of msys2.

PACKAGING
---------

- List changes in the way SCons is packaged and/or released

DOCUMENTATION
-------------

- Aligned manpage signature for Alias function to match implementation -
  if the previous *targets* parameter had been used as a keyword argument,
  the results would be incorrect (does not apply to positional argument
  usage, which had no problem).
- Changed the message about scons -H to clarify it shows built-in options only.

DEVELOPMENT
-----------

- SCons test runner now uses pathlib to normalize and compare paths
  to test files, which allows test lists, exclude lists, and tests on
  the command line to "not care" about the OS convention for pathname
  separators.
- Class ActionBase is now an abstract base class to more accurately
  reflect its usage. Derived _ActionAction inherits the ABC, so it
  now declares (actually raises NotImplementedError) two methods it
  doesn't use so it can be instantiated by unittests and others.
- Added more type annotations to internal routines.
- Cleaned up dblite module (checker warnings, etc.).

Thanks to the following contributors listed below for their contributions to this release.
==========================================================================================
.. code-block:: text

    git shortlog --no-merges -ns 4.5.2..HEAD
