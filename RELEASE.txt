If you are reading this in the git repository, the contents
refer to *unreleased* changes since the last SCons release.
Past official release announcements appear at:

    https://scons.org/tag/releases.html

==================================================================

A new SCons release, 4.8.1, is now available on the SCons download page:

    https://scons.org/pages/download.html


Here is a summary of the changes since 4.8.0:

NEW FUNCTIONALITY
-----------------

- List new features (presumably why a checkpoint is being released)

DEPRECATED FUNCTIONALITY
------------------------

- List anything that's been deprecated since the last release

CHANGED/ENHANCED EXISTING FUNCTIONALITY
---------------------------------------

- env.Dump() previously accepted a single optional "key" argument.
  It now accepts any number of optional "key" arguments; any supplied
  keys will be serialized with their values in a Python dict style.
  As a result there is a small change in behavior: if a *single* key
  argument is given, where it previously would return a string containing
  just the value, now it will return a string that looks like a dictionary
  including the key.  For example, from "'gcc'" to "{'CC': 'gcc'}".
  This should not have any impact as the result of calling Dump is
  intended for diagnostic output, not for use by other interfaces.

FIXES
-----

- SCons 4.8.0 added an `__all__`  specifier at the top of the Variables
  module (`Variables/__init__.py`) to control what is made available in
  a star import. However, there was existing usage of doing
  `from SCons.Variables import *` which expected the variable *types*
  to be avaiable. `BoolVariable`, `EnumVariable`, `ListVariable`,
  `PackageVariable` and `PathVariable` are added to `__all__`,
  so this form of import should now work again.

IMPROVEMENTS
------------

- List improvements that wouldn't be visible to the user in the
documentation:  performance improvements (describe the circumstances
under which they would be observed), or major code cleanups

PACKAGING
---------

- List changes in the way SCons is packaged and/or released

DOCUMENTATION
-------------

- Improve wording of manpage "Functions and Environment Methods" section.

DEVELOPMENT
-----------

- sctypes `is_*` functions given explicit return types. Python 3.13+ uses
  `TypeIs` for a near-equivalent of `isinstance`. Python 3.10 through 3.12
  uses `TypeGuard`, a less accurate implementation but still provides
  usable type hinting. Python 3.9 and earlier simply returns `bool`, same
  as before.

Thanks to the following contributors listed below for their contributions to this release.
==========================================================================================
.. code-block:: text

    git shortlog --no-merges -ns 4.0.1..HEAD
